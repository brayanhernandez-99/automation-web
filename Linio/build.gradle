buildscript {
    ext {
        SerenityCoreVersion = "2.1.8"
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:${SerenityCoreVersion}")
    }
}

plugins {
    id 'java'
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
group 'com.linio'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    SerenityCoreVersion = "2.1.8"
}

dependencies {
    implementation "junit:junit:4.12"
    implementation "net.serenity-bdd:serenity-cucumber:1.9.45"
    implementation "net.serenity-bdd:serenity-core:${SerenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-junit:${SerenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${SerenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${SerenityCoreVersion}"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.assertj:assertj-core:3.22.0'
    implementation 'org.slf4j:slf4j-simple:1.7.33'
    implementation 'org.slf4j:slf4j-api:1.7.33'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

tasks.withType(Test) {
    systemProperties = System.properties as Map<String, ?>
    maxParallelForks = Runtime.runtime.availableProcessors()
}

gradle.startParameter.continueOnFailure = true